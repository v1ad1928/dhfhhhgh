from pygame import *
win_width = 700
win_height = 500
window = display.set_mode((win_width, win_height))
display.set_caption('Лабіринт')
back = ((0, 0, 0))
picture = transform.scale(image.load("jungle.jpg"), (700, 500))

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y):
        sprite.Sprite.__init__(self)
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_x_speed, player_y_speed):
        GameSprite.__init__(self, player_image, player_x, player_y, size_x, size_y)
        self.x_speed = player_x_speed
        self.y_speed = player_y_speed

    def update(self):
        self.rect.x += self.x_speed
        platform_touched = sprite.spritecollide(self, barrier, False)
        if self.x_speed > 0:
            for p in platform_touched:
                self.rect.right = p.rect.left
        elif self.x_speed < 0:
            for p in platform_touched:
                self.rect.left = p.rect.right
        self.rect.y += self.y_speed
        platform_touched = sprite.spritecollide(self, barrier, False)
        if self.y_speed > 0:
            for p in platform_touched:
                self.rect.bottom = p.rect.top
        elif self.y_speed < 0:
            for p in platform_touched:
                self.rect.top = p.rect.bottom

    def fire(self):
        bullet = Bullet('ban.png', self.rect.right, self.rect.centery, 20, 30, 15)
        bullets.add(bullet)

class Enemy(GameSprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        GameSprite.__init__(self, player_image, player_x, player_y, size_x, size_y)
        self.speed = player_speed
        self.side = 'left'

    def update(self):
        if self.rect.x <= 420 or self.rect.x == 340:
            self.side = 'right'
        if self.rect.x >= 620 or self.rect.x == 0:
            self.side = 'left'
        if self.side == 'left':
            self.rect.x -= self.speed
        else:
            self.rect.x += self.speed

class Bullet(GameSprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        GameSprite.__init__(self, player_image, player_x, player_y, size_x, size_y)
        self.speed = player_speed
    
    def update(self):
        self.rect.x += self.speed
        if self.rect.x >= win_width:
            self.kill()

wall1 = GameSprite('wall.png', 120, 260, 300, 50)
wall2 = GameSprite('wall2.png', 370, 200, 50, 300)
wall3 = GameSprite('wall.png', -10, 120, 260, 50)
wall4 = GameSprite('wall2.png', 370, 0, 50, 70)
wall5 = GameSprite('wall.png', 400, 220, 200, 50)
barrier = sprite.Group()
barrier.add(wall1)
barrier.add(wall2)
barrier.add(wall3)
barrier.add(wall4)
barrier.add(wall5)

bullets = sprite.Group()

packman = Player('001.png', 5, win_height-100, 100, 90, 0, 0)

enemy = GameSprite('leopard.png', win_width- 85, 100, 90, 90)

final = GameSprite('banana.png', win_width-85, win_height-100, 50, 50)
cyborg1 = Enemy('leopard.png', win_width- 80, 150, 100, 80, 5)
cyborg2 = Enemy('leopard.png', win_width- 75, 270, 100, 80, 8)
cyborgs = sprite.Group()
cyborgs.add(cyborg1)
cyborgs.add(cyborg2)

finish = False
play = True
while play:
    time.delay(50)
    for e in event.get():
        if e.type == QUIT:
            play = False
        elif e.type == KEYDOWN:
            if e.key == K_LEFT or e.key == K_a:
                packman.x_speed = -8
            elif e.key == K_RIGHT or e.key == K_d:
                packman.x_speed = 8
            elif e.key == K_UP or e.key == K_w:
                packman.y_speed = -8
            elif e.key == K_DOWN or e.key == K_s:
                packman.y_speed = 8
            elif e.key == K_SPACE:
                packman.fire()
        elif e.type == KEYUP:
            if e.key == K_LEFT or e.key == K_a:
                packman.x_speed = 0
            elif e.key == K_RIGHT or e.key == K_d:
                packman.x_speed = 0
            elif e.key == K_UP or e.key == K_w:
                packman.y_speed = 0
            elif e.key == K_DOWN or e.key == K_s:
                packman.y_speed = 0

    if finish == False:
        window.blit(picture, (0, 0))
    
        #window.fill(back)
        bullets.update()
        bullets.draw(window)
        barrier.draw(window)
        cyborgs.update()
        cyborgs.draw(window)
        final.reset()
        packman.reset()
        packman.update()

        sprite.groupcollide(bullets, barrier, True, False)
        sprite.groupcollide(bullets, cyborgs, True, True)

        if sprite.spritecollide(packman, cyborgs, False):
            finish = True
            end = image.load('lose.jpg')
            d = end.get_width() // end.get_height()
            #window.fill((230, 230, 230))
            window.fill((250, 250, 250))
            #window.blit(transform.scale(end, (win_width, win_height)), (0, 0))
            window.blit(transform.scale(end, (win_width, win_height)), (0, 0))

        if sprite.collide_rect(packman, final):
            finish = True
            win = image.load('win.jpg')
            window.fill((250, 250, 250))
            window.blit(transform.scale(win, (win_width, win_height)), (0, 0))
    display.update()
